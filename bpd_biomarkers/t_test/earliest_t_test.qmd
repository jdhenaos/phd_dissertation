---
title: "Early patients - t-test"
author: Juan Henao
date: '`r format(Sys.time(), "%d %B, %Y")`'
description: ""
title-block-banner: "black"
quarto:
  components:
    panel-tabset:
      max_items: 10
format: 
  html:
    embed-resources: true
    smooth-scroll: true
    anchor-sections: true
    number-sections: true
    toc: true
    toc-location: left
    code-fold: true
    theme: cerulean
editor: visual
---

```{r}
library(reshape2)
library(ggplot2)
library(ggpubr)

input_folder <- "/home/rstudio/project/input_data/"
pca <- read.csv(paste0(input_folder,"raw_data/231008_zero_predicted.csv"),row.names = 1)

converter <- function(data){
  for(i in pca$PhenoID){
    if(i %in% data$FullRunName){
      data$BPD[which(data$FullRunName == i)] <- pca$new_BPD[which(pca$PhenoID == i)]
    }
  }
  return(data)
}

met.t.test <- function(met){
  to.t.test <- melt(met$abundance)
  to.t.test$BPD <- to.t.test$sampling <- to.t.test$gender <- to.t.test$GA <- NA
  
  for (i in colnames(met$abundances)) {
    to.t.test$BPD[which(to.t.test$Var2 == i)] <- as.numeric(met$annotation$BPD[which(met$annotation$FullRunName == i)]) - 1
    to.t.test$sampling[which(to.t.test$Var2 == i)] <- met$annotation$sample.times[which(met$annotation$FullRunName == i)]
    to.t.test$GA[which(to.t.test$Var2 == i)] <- met$annotation$Gestational.age[which(met$annotation$FullRunName == i)]
    to.t.test$gender[which(to.t.test$Var2 == i)] <- as.numeric(met$annotation$gender[which(met$annotation$FullRunName == i)]) - 1
  }
  
  to.t.test$BPD <- as.factor(to.t.test$BPD)
  to.t.test$gender <- as.factor(to.t.test$gender)
  
  res <- t.test(met$abundances[,which(colnames(met$abundances) %in% met$annotation$FullRunName[which(met$annotation$BPD == 0)])],
                met$abundances[,which(colnames(met$abundances) %in% met$annotation$FullRunName[which(met$annotation$BPD == 1)])])
  
  ps.feat <- c()
  stats <- data.frame()
  for(j in seq(nrow(met$abundances))){
   val <- t.test(met$abundances[j,which(colnames(met$abundances) %in% met$annotation$FullRunName[which(met$annotation$BPD == 0)])],
                met$abundances[j,which(colnames(met$abundances) %in% met$annotation$FullRunName[which(met$annotation$BPD == 1)])])
   ps.feat <- c(ps.feat,val$p.value)
   
   stats <- rbind(stats,
                  data.frame(
                    DF = val$parameter,
                    `Std. error` = val$stderr,
                    `t value` = val$statistic,
                    `Conf. low` = val$conf.int[1],
                    `Conf. high` = val$conf.int[2],
                    `p-value` = val$p.value
                  ))
  }
  
  colnames(stats) <- c("DF","Std. error","t value","Conf. low","Conf. high","p-value")
  
  stats$`adj. p-value` <- p.adjust(ps.feat,method = "BH")
  rownames(stats) <- rownames(met$abundances)
  
  stats <- stats[order(stats$`adj. p-value`),]
  
  stats$DF <- formatC(x = stats$DF,digits = 2,format = "e")
  stats$`Std. error` <- formatC(x = stats$`Std. error`,digits = 2,format = "e")
  stats$`t value` <- formatC(x = stats$`t value`,digits = 2,format = "e")
  stats$`Conf. low`<- formatC(x = stats$`Conf. low`,digits = 2,format = "e")
  stats$`Conf. high` <- formatC(x = stats$`Conf. high`,digits = 2,format = "e")
  stats$`p-value` <- formatC(x = stats$`p-value`,digits = 2,format = "e")
  stats$`adj. p-value` <- formatC(x = stats$`adj. p-value`,digits = 2,format = "e")
  
  return(list(res,
              to.t.test,
              stats))
}

prot.t.test <- function(soma){
  to.t.test <- melt(soma$abundances.corrected)
  colnames(to.t.test) <- c("Var2","value")
  to.t.test$BPD <- to.t.test$sampling <- to.t.test$gender <- to.t.test$GA <- to.t.test$batch <- NA
  
  for (i in colnames(soma$abundances.corrected)) {
    to.t.test$BPD[which(to.t.test$Var2 == i)] <- as.numeric(soma$annotation$BPD[which(soma$annotation$FullRunName == i)]) - 1
    to.t.test$sampling[which(to.t.test$Var2 == i)] <- soma$annotation$sample.times[which(soma$annotation$FullRunName == i)]
    to.t.test$GA[which(to.t.test$Var2 == i)] <- soma$annotation$Gestational.age[which(soma$annotation$FullRunName == i)]
    to.t.test$gender[which(to.t.test$Var2 == i)] <- as.numeric(soma$annotation$gender[which(soma$annotation$FullRunName == i)]) - 1
    to.t.test$batch[which(to.t.test$Var2 == i)] <- as.numeric(soma$annotation$batch[which(soma$annotation$FullRunName == i)]) - 1
  }
  
  to.t.test$BPD <- as.factor(to.t.test$BPD)
  to.t.test$gender <- as.factor(to.t.test$gender)
  to.t.test$batch <- as.factor(to.t.test$batch)
  
  res <- t.test(soma$abundances.corrected[,which(colnames(soma$abundances.corrected) %in% soma$annotation$FullRunName[which(soma$annotation$BPD == 0)])],
                soma$abundances.corrected[,which(colnames(soma$abundances.corrected) %in% soma$annotation$FullRunName[which(soma$annotation$BPD == 1)])])
  
  ps.feat <- c()
  stats <- data.frame()
  for(j in seq(nrow(soma$abundances.corrected))){
   val <- t.test(soma$abundances.corrected[j,which(colnames(soma$abundances.corrected) %in% soma$annotation$FullRunName[which(soma$annotation$BPD == 0)])],
                soma$abundances.corrected[j,which(colnames(soma$abundances.corrected) %in% soma$annotation$FullRunName[which(soma$annotation$BPD == 1)])])
   ps.feat <- c(ps.feat,val$p.value)
   
   stats <- rbind(stats,
                  data.frame(
                    DF = val$parameter,
                    `Std. error` = val$stderr,
                    `t value` = val$statistic,
                    `Conf. low` = val$conf.int[1],
                    `Conf. high` = val$conf.int[2],
                    `p-value` = val$p.value
                  ))
  }
  
  colnames(stats) <- c("DF","Std. error","t value","Conf. low","Conf. high","p-value")
  
  stats$`adj. p-value` <- p.adjust(ps.feat,method = "BH")
  rownames(stats) <- rownames(soma$abundances,corrected)
  
  stats <- stats[order(stats$`adj. p-value`),]
  
  stats$DF <- formatC(x = stats$DF,digits = 2,format = "e")
  stats$`Std. error` <- formatC(x = stats$`Std. error`,digits = 2,format = "e")
  stats$`t value` <- formatC(x = stats$`t value`,digits = 2,format = "e")
  stats$`Conf. low`<- formatC(x = stats$`Conf. low`,digits = 2,format = "e")
  stats$`Conf. high` <- formatC(x = stats$`Conf. high`,digits = 2,format = "e")
  stats$`p-value` <- formatC(x = stats$`p-value`,digits = 2,format = "e")
  stats$`adj. p-value` <- formatC(x = stats$`adj. p-value`,digits = 2,format = "e")
  
  return(list(res,
              to.t.test,
              stats))
}
```

# Acylcarnitines

```{r}
acyl <- readRDS(paste0(input_folder,"rds_data/earlier_acyl.rds"))
acyl$annotation <- converter(data = acyl$annotation)

acyl.t.test <- met.t.test(acyl)
rmarkdown::paged_table(as.data.frame(acyl.t.test[[3]]))
```

#### Hexadecenoylcarnitine

```{r}
to.box.plot <- melt(t(acyl$abundances))
colnames(to.box.plot) <- c("Sample", "Protein","Expression")

to.box.plot$Condition <- NA

for (i in rownames(acyl$abundances)) {
  to.box.plot$Condition[which(to.box.plot$Protein == i)] <- as.numeric(acyl$annotation$BPD) - 1
}

to.box.plot$Condition <- as.factor(to.box.plot$Condition)

######

to.box.plot <- to.box.plot[to.box.plot$Protein == "Hexadecenoylcarntine",]
to.box.plot$Condition <- as.factor(to.box.plot$Condition)

q <- ggplot(data = to.box.plot,aes(x=Condition, y=Expression,fill=Condition)) +
  geom_boxplot() + 
  geom_jitter(data = to.box.plot,color = "black", size = 0.7) +
  theme_classic() +
  scale_fill_manual(values = c("#66C2A5","#FC8D62"),labels=c("No BPD", "Moderate/Severe BPD"),name="") +
  scale_x_discrete(labels=c("No BPD", "Moderate/Severe BPD")) +
  labs(title = "Hexadecenoylcarnitine - t-test",
       subtitle = "(Reclassification)") +
  xlab("") + ylab("Normalized abundances") + theme(legend.position = "none", text = element_text(size=8), plot.title = element_text(size=8)) +
  stat_compare_means(method = "t.test",comparisons = list(c("0","1")))

boxp2 <- ggplot_build(q)
boxp2$data[[3]]$annotation <- "adj. p-value= 0.057"
boxp2$data[[3]]$textsize <- 2.0

pdf(file = "/home/rstudio/project/results/BPD/earliest_t_test/240722_earliest_Hexadecenoylcarnitine.pdf",width = 6.35/2.54,height = 6.35/2.54)
plot(ggplot_gtable(boxp2))
dev.off()

plot(ggplot_gtable(boxp2))
```

#### Palmitoylcarnitine

```{r}
to.box.plot <- melt(t(acyl$abundances))
colnames(to.box.plot) <- c("Sample", "Protein","Expression")

to.box.plot$Condition <- NA

for (i in rownames(acyl$abundances)) {
  to.box.plot$Condition[which(to.box.plot$Protein == i)] <- as.numeric(acyl$annotation$BPD) - 1
}

to.box.plot$Condition <- as.factor(to.box.plot$Condition)

######

to.box.plot <- to.box.plot[to.box.plot$Protein == "Palmitoylcarnitine",]
to.box.plot$Condition <- as.factor(to.box.plot$Condition)

q <- ggplot(data = to.box.plot,aes(x=Condition, y=Expression,fill=Condition)) +
  geom_boxplot() + 
  geom_jitter(data = to.box.plot,color = "black", size = 0.7) +
  theme_classic() +
  scale_fill_manual(values = c("#66C2A5","#FC8D62"),labels=c("No BPD", "Moderate/Severe BPD"),name="") +
  scale_x_discrete(labels=c("No BPD", "Moderate/Severe BPD")) +
  labs(title = "Palmitoylcarnitine - t-test",
       subtitle = "(Reclassification)") +
  xlab("") + ylab("Normalized abundances") + theme(legend.position = "none", text = element_text(size=8), plot.title = element_text(size=8)) +
  stat_compare_means(method = "t.test",comparisons = list(c("0","1")))

boxp2 <- ggplot_build(q)
boxp2$data[[3]]$annotation <- "adj. p-value= 0.064"
boxp2$data[[3]]$textsize <- 2.0

pdf(file = "/home/rstudio/project/results/BPD/earliest_t_test/240722_earliest_Palmitoylcarnitine.pdf",width = 6.35/2.54,height = 6.35/2.54)
plot(ggplot_gtable(boxp2))
dev.off()

plot(ggplot_gtable(boxp2))
```

#### Isovalerylcarnitine

```{r}
to.box.plot <- melt(t(acyl$abundances))
colnames(to.box.plot) <- c("Sample", "Protein","Expression")

to.box.plot$Condition <- NA

for (i in rownames(acyl$abundances)) {
  to.box.plot$Condition[which(to.box.plot$Protein == i)] <- as.numeric(acyl$annotation$BPD) - 1
}

to.box.plot$Condition <- as.factor(to.box.plot$Condition)

######

to.box.plot <- to.box.plot[to.box.plot$Protein == "Isovalerylcarnitine",]
to.box.plot$Condition <- as.factor(to.box.plot$Condition)

q <- ggplot(data = to.box.plot,aes(x=Condition, y=Expression,fill=Condition)) +
  geom_boxplot() + 
  geom_jitter(data = to.box.plot,color = "black", size = 0.7) +
  theme_classic() +
  scale_fill_manual(values = c("#66C2A5","#FC8D62"),labels=c("No BPD", "Moderate/Severe BPD"),name="") +
  scale_x_discrete(labels=c("No BPD", "Moderate/Severe BPD")) +
  labs(title = "Isovalerylcarnitine - t-test",
       subtitle = "(Reclassification)") +
  xlab("") + ylab("Normalized abundances") + theme(legend.position = "none", text = element_text(size=8), plot.title = element_text(size=8)) +
  stat_compare_means(method = "t.test",comparisons = list(c("0","1")))

boxp2 <- ggplot_build(q)
boxp2$data[[3]]$annotation <- "adj. p-value= 0.096"
boxp2$data[[3]]$textsize <- 2.0

pdf(file = "/home/rstudio/project/results/BPD/earliest_t_test/240722_earliest_Isovalerylcarnitine.pdf",width = 6.35/2.54,height = 6.35/2.54)
plot(ggplot_gtable(boxp2))
dev.off()

plot(ggplot_gtable(boxp2))
```

# Non-triglycerides

```{r}
non.pos.tgs <- readRDS(paste0(input_folder,"rds_data/earlier_non_pos_tgs.rds"))
non.pos.tgs$annotation <- converter(data = non.pos.tgs$annotation)

non.pos.tgs.t.test <- met.t.test(non.pos.tgs)
rmarkdown::paged_table(as.data.frame(non.pos.tgs.t.test[[3]]))
```

#### PC(O-36:5)

```{r}
to.box.plot <- melt(t(non.pos.tgs$abundances))
colnames(to.box.plot) <- c("Sample", "Protein","Expression")

to.box.plot$Condition <- NA

for (i in rownames(non.pos.tgs$abundances)) {
  to.box.plot$Condition[which(to.box.plot$Protein == i)] <- as.numeric(non.pos.tgs$annotation$BPD) - 1
}

to.box.plot$Condition <- as.factor(to.box.plot$Condition)

######

to.box.plot <- to.box.plot[to.box.plot$Protein == "PC(O-36:5)",]
to.box.plot$Condition <- as.factor(to.box.plot$Condition)

q <- ggplot(data = to.box.plot,aes(x=Condition, y=Expression,fill=Condition)) +
  geom_boxplot() + 
  geom_jitter(data = to.box.plot,color = "black", size = 0.7) +
  theme_classic() +
  scale_fill_manual(values = c("#66C2A5","#FC8D62"),labels=c("No BPD", "Moderate/Severe BPD"),name="") +
  scale_x_discrete(labels=c("No BPD", "Moderate/Severe BPD")) +
  labs(title = "PC(O-36:5) - t-test",
       subtitle = "(Reclassification)") +
  xlab("") + ylab("Normalized abundances") + theme(legend.position = "none", text = element_text(size=8), plot.title = element_text(size=8)) +
  stat_compare_means(method = "t.test",comparisons = list(c("0","1")))

boxp2 <- ggplot_build(q)
boxp2$data[[3]]$annotation <- "adj. p-value= 0.074"
boxp2$data[[3]]$textsize <- 2.0

pdf(file = "/home/rstudio/project/results/BPD/earliest_t_test/240722_earliest_pco36_5.pdf",width = 6.35/2.54,height = 6.35/2.54)
plot(ggplot_gtable(boxp2))
dev.off()

plot(ggplot_gtable(boxp2))
```

#### PC(O-38:5)

```{r}
to.box.plot <- melt(t(non.pos.tgs$abundances))
colnames(to.box.plot) <- c("Sample", "Protein","Expression")

to.box.plot$Condition <- NA

for (i in rownames(non.pos.tgs$abundances)) {
  to.box.plot$Condition[which(to.box.plot$Protein == i)] <- as.numeric(non.pos.tgs$annotation$BPD) - 1
}

to.box.plot$Condition <- as.factor(to.box.plot$Condition)

######

to.box.plot <- to.box.plot[to.box.plot$Protein == "PC(O-38:5)",]
to.box.plot$Condition <- as.factor(to.box.plot$Condition)

q <- ggplot(data = to.box.plot,aes(x=Condition, y=Expression,fill=Condition)) +
  geom_boxplot() + 
  geom_jitter(data = to.box.plot,color = "black", size = 0.7) +
  theme_classic() +
  scale_fill_manual(values = c("#66C2A5","#FC8D62"),labels=c("No BPD", "Moderate/Severe BPD"),name="") +
  scale_x_discrete(labels=c("No BPD", "Moderate/Severe BPD")) +
  labs(title = "PC(O-38:5) - t-test",
       subtitle = "(Reclassification)") +
  xlab("") + ylab("Normalized abundances") + theme(legend.position = "none", text = element_text(size=8), plot.title = element_text(size=8)) +
  stat_compare_means(method = "t.test",comparisons = list(c("0","1")))

boxp2 <- ggplot_build(q)
boxp2$data[[3]]$annotation <- "adj. p-value= 0.082"
boxp2$data[[3]]$textsize <- 2.0

pdf(file = "/home/rstudio/project/results/BPD/earliest_t_test/240722_earliest_pco38_5.pdf",width = 6.35/2.54,height = 6.35/2.54)
plot(ggplot_gtable(boxp2))
dev.off()

plot(ggplot_gtable(boxp2))
```

# Protoemics

```{r}
proteomics <- readRDS(paste0(input_folder,"rds_data/earlier_proteomics.rds"))
proteomics$annotation <- converter(proteomics$annotation)

soma.t.test <- prot.t.test(proteomics)
rmarkdown::paged_table(as.data.frame(soma.t.test[[3]]))
```

#### CCL22

```{r}
to.box.plot <- melt(t(proteomics$abundances))
colnames(to.box.plot) <- c("Sample", "Protein","Expression")

to.box.plot$Condition <- NA

for (i in rownames(proteomics$abundances)) {
  to.box.plot$Condition[which(to.box.plot$Protein == i)] <- as.numeric(proteomics$annotation$BPD) - 1
}

to.box.plot$Condition <- as.factor(to.box.plot$Condition)

######

to.box.plot <- to.box.plot[to.box.plot$Protein == "MDC",]
to.box.plot$Condition <- as.factor(to.box.plot$Condition)

q <- ggplot(data = to.box.plot,aes(x=Condition, y=Expression,fill=Condition)) +
  geom_boxplot() + 
  geom_jitter(data = to.box.plot,color = "black", size = 0.7) +
  theme_classic() +
  scale_fill_manual(values = c("#66C2A5","#FC8D62"),labels=c("No BPD", "Moderate/Severe BPD"),name="") +
  scale_x_discrete(labels=c("No BPD", "Moderate/Severe BPD")) +
  labs(title = "CCL22 - t-test",
       subtitle = "(Reclassification)") +
  xlab("") + ylab("Normalized abundances") + theme(legend.position = "none", text = element_text(size=8), plot.title = element_text(size=8)) +
  stat_compare_means(method = "t.test",comparisons = list(c("0","1")))

boxp2 <- ggplot_build(q)
boxp2$data[[3]]$annotation <- "adj. p-value= 0.051"
boxp2$data[[3]]$textsize <- 2.0

pdf(file = "/home/rstudio/project/results/BPD/earliest_t_test/240722_earliest_ccl22.pdf",width = 6.35/2.54,height = 6.35/2.54)
plot(ggplot_gtable(boxp2))
dev.off()

plot(ggplot_gtable(boxp2))
```

# Session info

```{r}
sessionInfo()
```