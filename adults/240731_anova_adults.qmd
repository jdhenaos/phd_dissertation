---
title: "ADULT DATA: ANOVA for proteomics data"
author: Juan Henao
date: '`r format(Sys.time(), "%d %B, %Y")`'
description: ""
title-block-banner: "black"
quarto:
  components:
    panel-tabset:
      max_items: 10
format: 
  html:
    embed-resources: true
    smooth-scroll: true
    anchor-sections: true
    number-sections: true
    toc: true
    toc-location: left
    code-fold: true
    theme: cerulean
editor: visual
---

```{r}
library(openxlsx,verbose = F)
library(dplyr,verbose = F)
library(reshape2,verbose = F)
library(ggpubr,verbose = F)
library(rstatix,verbose = F)
library(vsn,verbose = F)
library(tibble)
library(proBatch,verbose = F)
library(ggrepel)

input_folder <- "/home/rstudio/project/input_data/raw_data/"

adult.info <- read.xlsx(paste0(input_folder,"Adults_clinical_data_merged.20190308.xlsx"))
adult.info$Variables <- gsub(pattern = " ",replacement = "",x = adult.info$Variables)
adult.info <- adult.info[!duplicated(adult.info$Variables),]

id.table <- read.xlsx(paste0(input_folder,"Protein_IDs_20201012.xlsx"))
raw.ipf <- read.xlsx(paste0(input_folder,"220513_IPF.xlsx"),
                   sheet = "Somalogic")
raw.ipf$PhenoID <- gsub(pattern = " ",replacement = "",x = raw.ipf$PhenoID)

raw.copd <- read.xlsx(paste0(input_folder,"220513_COPD.xlsx"),
                      sheet = "Somalogic")
raw.copd$PhenoID <- gsub(pattern = " ",replacement = "",x = raw.copd$PhenoID)

raw.ipf <- raw.ipf[,grep(pattern = "HPV|HIV",x = colnames(raw.ipf),invert = T)]
raw.copd <- raw.copd[,grep(pattern = "HPV|HIV",x = colnames(raw.copd),invert = T)]

# Solving replicates as the lesser CV
raw.copd <- raw.copd[-c(13,24),]

ipf <- as.data.frame(raw.ipf[,4:ncol(raw.ipf)])
rownames(ipf) <- raw.ipf$PhenoID

copd <- as.data.frame(raw.copd[,4:ncol(raw.copd)])
rownames(copd) <- raw.copd$PhenoID

ipf <- ipf[grep(pattern = "FC|FR",x = rownames(ipf),invert = T),]

annot.soma <- rbind(
  data.frame(
    PhenoID = rownames(ipf),
    condition = "ipf"
  ),
  data.frame(
    PhenoID = rownames(copd),
    condition = ifelse(grepl(pattern = "FC|FR",x = rownames(copd)),"adult.control","copd")
  )
)

soma <- rbind(ipf,copd)

# Normalization

#boxplot(log2(t(soma)),outline = T,las=2)

norm.soma <- vsn2(ExpressionSet(assayData = t(soma)))
norm.soma <- exprs(norm.soma)

boxplot(norm.soma,outline = T,las=2)

# Batch-effect detection

colnames(annot.soma)  <- c("FullRunName","Condition")

adult.info <- adult.info[which(adult.info$Variables %in% annot.soma$FullRunName),]
adult.info <- adult.info[match(annot.soma$FullRunName,adult.info$Variables),]

if(any(adult.info$Variables != annot.soma$FullRunName)){stop("annotation and smoking status data: unsorted")}

annot.soma$gender <- as.factor(adult.info$Sex_1_is_male)
annot.soma$smoking <- as.factor(adult.info$Smoking_ever)
annot.soma$Condition <- as.factor(annot.soma$Condition)

array.comp <- c("Condition")

if(any(annot.soma$FullRunName != colnames(norm.soma))){
  stop("Clinical data and samples from matrix do not match")
}


p <- plot_PCA(data_matrix = norm.soma,sample_annotation = annot.soma, color_by = "Condition") +
    geom_point(size=3) +
    scale_color_manual(values = c("#b2df8a","#1f78b4","#a6cee3")) + 
    theme(legend.position = "none", text = element_text(size=8), plot.title = element_text(size=8)) +
    labs(title = "Principal component analysis",
       subtitle = "Adult CLD")
  
  #pdf(file = "~/Documents/BPDendotypes/240709_results_V10/SupplementaryFigure2/adult_preprocessed.pdf",width = 6.35/2.54,height = 6.35/2.54)
  #print(p)
  #dev.off()
  
print(p)

#pca.soma <- prcomp(t(norm.soma))$x

#par(mar = c(1, 1, 1, 1))

#{plot(pca.soma[,1],pca.soma[,2],cex=0.1)
 # text(pca.soma[,1],pca.soma[,2],labels=rownames(pca.soma),cex=0.6)}

new.soma <- norm.soma[,which(!colnames(norm.soma) %in% c("Mfsf845","Mdcq757","Mcjw672"))]
annot.soma <- annot.soma[which(!annot.soma$FullRunName %in% c("Mfsf845","Mdcq757","Mcjw672")),]
row.names(annot.soma) <- annot.soma$FullRunName

p <- plot_PCA(data_matrix = new.soma,sample_annotation = annot.soma, color_by = "Condition") +
    geom_point(size=3) +
    scale_color_manual(values = c("#b2df8a","#1f78b4","#a6cee3")) + 
    theme(legend.position = "none", text = element_text(size=8), plot.title = element_text(size=8)) +
    labs(title = "Principal component analysis",
       subtitle = "Adult CLD")
  
#  pdf(file = "~/Documents/BPDendotypes/240709_results_V10/SupplementaryFigure2/adult_processed.pdf",width = 6.35/2.54,height = 6.35/2.54)
 # print(p)
  #dev.off()
  
print(p)

adults <- list(abundances = new.soma,
               annotation = annot.soma)

saveRDS(object = adults,file = "/home/rstudio/project/input_data/rds_data/adults.rds")

to.aov <- melt(new.soma)
to.aov$Condition <- to.aov$Gender <- to.aov$Smoking <- NA
  
for (i in colnames(new.soma)) {
  to.aov$Condition[which(to.aov$Var2 == i)] <- annot.soma$Condition[which(annot.soma$FullRunName == i)]
  to.aov$Gender[which(to.aov$Var2 == i)] <- annot.soma$gender[which(annot.soma$FullRunName == i)]
  to.aov$Smoking[which(to.aov$Var2 == i)] <- annot.soma$smoking[which(annot.soma$FullRunName == i)]
}

to.aov$Condition <- as.factor(to.aov$Condition)
to.aov$Gender <- as.factor(to.aov$Gender)
to.aov$Smoking <- as.factor(to.aov$Smoking)

res <- aov(value ~ Condition + Gender + Smoking,to.aov)

ps.feat <- c()
stats <- data.frame()
for(j in seq(nrow(new.soma))){
 val <- aov(unlist(new.soma[j,])~annot.soma$Condition + annot.soma$gender, annot.soma$smoking)
 ps.feat <- c(ps.feat,summary(val)[[1]][1,5])
 stats <- rbind(stats,as.data.frame(summary(val)[[1]][1,]))
}

stats$`adj. p-value` <- p.adjust(ps.feat,method = "BH")
rownames(stats) <- rownames(new.soma)

stats <- stats[order(stats$`adj. p-value`),]

######################################################
######################################################

stats$log2FC <- NULL
for (i in seq(nrow(stats))) {
  stats$log2FC[i] <- mean(new.soma[rownames(stats)[i],annot.soma$FullRunName[which(annot.soma$Condition != "adult.control")]]) - mean(new.soma[rownames(stats)[i],annot.soma$FullRunName[which(annot.soma$Condition == "adult.control")]])

}

to.plot <- stats %>%
  mutate(
    neglog10_pval = -log10(`adj. p-value`),
    significance = case_when(
      `adj. p-value` < 0.05 & log2FC > 0 ~ "up",
      `adj. p-value` < 0.05 & log2FC < 0 ~ "down",
      TRUE ~ "Not significant"
    )
  )

# Label top 10 by p-value
top_hits <- to.plot %>% rownames_to_column(var = "gene") %>% slice_head(n=5) %>% bind_rows(
     to.plot %>%
      rownames_to_column(var = "gene") %>%
      filter(gene %in% c("MDC", "SCGF.alpha","SCGF.beta","KI3L2"))
  )

top_hits$gene <- c("FGA", "FGG", "F2",
                   "C1R", "MMP3", "CCL22",
                   "SCGF-beta","KIR3DL2",
                   "SCGF-alpha")

p <- ggplot(to.plot, aes(x = log2FC, y = neglog10_pval, color = significance)) +
  geom_point(alpha = 0.6) +
  geom_text_repel(
    data = top_hits,
    aes(label = gene),
    size = 2,
    vjust = -2,
    hjust=2,
    colour = "black",
    box.padding = 0.2,
    point.padding = 0.2,
    max.overlaps = Inf,       # ensures all labels are attempted
    segment.color = "black", # arrow color
    segment.size = 0.2       # arrow thickness
  ) +
  geom_hline(yintercept = -log10(0.05),linetype=2) +
  scale_color_manual(values = c("#b3ccd6", "grey", "#66a3b2")) +
  theme_classic() +
  labs(
    title = "Volcano plot - Proteomics",
    subtitle = "Adult CLD",
    x = "Log2 fold change",
    y = "-Log10 (adj. p-value)"
  ) +
  theme(
    legend.position = "none",
    text = element_text(size = 8),
    plot.title = element_text(size = 8)
  )

ggsave(filename = "/home/rstudio/project/results/BPD/adults/240731_volcano.pdf",plot = p,
       width = 6.35,height = 6.35,units = "cm")

p
######################################################
######################################################


stats$`Sum Sq` <- formatC(x = stats$`Sum Sq`, digits = 2, format = "e")
stats$`Mean Sq` <- formatC(x = stats$`Mean Sq`, digits = 2, format = "e")
stats$`F value` <- formatC(x = stats$`F value`, digits = 2, format = "e")
stats$`Pr(>F)` <- formatC(x = stats$`Pr(>F)`, digits = 2, format = "e")
stats$`adj. p-value` <- formatC(x = stats$`adj. p-value`, digits = 2, format = "e")

rmarkdown::paged_table(stats %>% as.data.frame())
```

```{r}
rmarkdown::paged_table(stats[grep(pattern = "MDC|SCGF|KI3L2",x = rownames(stats)),] %>% as.data.frame())
```

# CCL22

```{r}
to.box.plot <- melt(t(new.soma))
colnames(to.box.plot) <- c("Sample", "Protein","Expression")

to.box.plot$Condition <- NA

for (i in rownames(new.soma)) {
  to.box.plot$Condition[which(to.box.plot$Protein == i)] <- annot.soma$Condition
}

to.box.plot$Condition <- as.factor(to.box.plot$Condition)

######

to.box.plot <- to.box.plot[to.box.plot$Protein == "MDC",]
to.box.plot$Condition <- as.factor(to.box.plot$Condition)

q <- ggplot(data = to.box.plot,aes(x=Condition, y=Expression,fill=Condition)) +
  geom_boxplot() + 
  geom_jitter(data = to.box.plot,color = "black", size = 0.7) +
  theme_classic() +
  scale_fill_manual(values = c("#b2df8a","#1f78b4","#a6cee3"),labels=c("Control", "COPD","IPF"),name="") +
  scale_x_discrete(labels=c("Control", "COPD","IPF")) +
  xlab("") + ylab("Normalized abundances") +
  labs(title = "CCL22 - ANOVA (adj. p-value= 9e-5)",
       subtitle = "t-test (post-hoc) - adj. p-values:") +
  stat_compare_means(method = "anova", label.y=4)  + theme(legend.position = "none", text = element_text(size=8), plot.title = element_text(size=8)) +
  stat_compare_means(method = "t.test",comparisons = list(c("1","2"),
                                                          c("1","3"),
                                                          c("2","3")))


boxp2 <- ggplot_build(q)
boxp2$data[[4]]$annotation <- p.adjust(boxp2$data[[4]]$annotation, method = "BH")
boxp2$data[[3]]$label <- ""
boxp2$data[[4]]$textsize <- boxp2$data[[3]]$size <- 2.5

pdf(file = "/home/rstudio/project/results/BPD/adults/240731_ccl22.pdf",width = 6.35/2.54,height = 6.35/2.54)
plot(ggplot_gtable(boxp2))
dev.off()

plot(ggplot_gtable(boxp2))
```

# SCGF-beta

```{r}
to.box.plot <- melt(t(new.soma))
colnames(to.box.plot) <- c("Sample", "Protein","Expression")

to.box.plot$Condition <- NA

for (i in rownames(new.soma)) {
  to.box.plot$Condition[which(to.box.plot$Protein == i)] <- annot.soma$Condition
}

to.box.plot$Condition <- as.factor(to.box.plot$Condition)

######

to.box.plot <- to.box.plot[to.box.plot$Protein == "SCGF.beta",]
to.box.plot$Condition <- as.factor(to.box.plot$Condition)

q <- ggplot(data = to.box.plot,aes(x=Condition, y=Expression,fill=Condition)) +
  geom_boxplot() + 
  geom_jitter(data = to.box.plot,color = "black", size = 0.7) +
  theme_classic() +
  scale_fill_manual(values = c("#b2df8a","#1f78b4","#a6cee3"),labels=c("Control", "COPD","IPF"),name="") +
  scale_x_discrete(labels=c("Control", "COPD","IPF")) +
  xlab("") + ylab("Normalized abundances") +
  labs(title = expression("SCGF-"~beta~" - ANOVA (adj. p-value= 5e-4)"),
       subtitle = "t-test (post-hoc) - adj. p-values:") +
  stat_compare_means(method = "anova", label.y=3.6)  + theme(legend.position = "none", text = element_text(size=8), plot.title = element_text(size=8)) +
  stat_compare_means(method = "t.test",comparisons = list(c("1","2"),
                                                          c("1","3"),
                                                          c("2","3")))


boxp2 <- ggplot_build(q)
boxp2$data[[4]]$annotation <- p.adjust(boxp2$data[[4]]$annotation, method = "BH")
boxp2$data[[3]]$label <- ""
boxp2$data[[4]]$textsize <- boxp2$data[[3]]$size <- 2.5

pdf(file = "/home/rstudio/project/results/BPD/adults/240731_scgf_beta.pdf",width = 6.35/2.54,height = 6.35/2.54)
plot(ggplot_gtable(boxp2))
dev.off()

plot(ggplot_gtable(boxp2))
```

# KIR3DL2

```{r}
to.box.plot <- melt(t(new.soma))
colnames(to.box.plot) <- c("Sample", "Protein","Expression")

to.box.plot$Condition <- NA

for (i in rownames(new.soma)) {
  to.box.plot$Condition[which(to.box.plot$Protein == i)] <- annot.soma$Condition
}

to.box.plot$Condition <- as.factor(to.box.plot$Condition)

######

to.box.plot <- to.box.plot[to.box.plot$Protein == "KI3L2",]
to.box.plot$Condition <- as.factor(to.box.plot$Condition)

q <- ggplot(data = to.box.plot,aes(x=Condition, y=Expression,fill=Condition)) +
  geom_boxplot() + 
  geom_jitter(data = to.box.plot,color = "black", size = 0.7) +
  theme_classic() +
  scale_fill_manual(values = c("#b2df8a","#1f78b4","#a6cee3"),labels=c("Control", "COPD","IPF"),name="") +
  scale_x_discrete(labels=c("Control", "COPD","IPF")) +
  xlab("") + ylab("Normalized abundances") +
  labs(title = "KIR3DL2 - ANOVA (adj. p-value= 4e-3)",
       subtitle = "t-test (post-hoc) - adj. p-values:") +
  stat_compare_means(method = "anova", label.y=4)  + theme(legend.position = "none", text = element_text(size=8), plot.title = element_text(size=8)) +
  stat_compare_means(method = "t.test",comparisons = list(c("1","2"),
                                                          c("1","3"),
                                                          c("2","3")))


boxp2 <- ggplot_build(q)
boxp2$data[[4]]$annotation <- p.adjust(boxp2$data[[4]]$annotation, method = "BH")
boxp2$data[[3]]$label <- ""
boxp2$data[[4]]$textsize <- boxp2$data[[3]]$size <- 2.5

pdf(file = "/home/rstudio/project/results/BPD/adults/240731_kir3dl2.pdf",width = 6.35/2.54,height = 6.35/2.54)
plot(ggplot_gtable(boxp2))
dev.off()

plot(ggplot_gtable(boxp2))
```

# Log2FC

```{r}
proteomics <- readRDS("/home/rstudio/project/input_data/rds_data/proteomics.rds")

to.box.plot <- melt(t(proteomics$abundances.corrected))
colnames(to.box.plot) <- c("Sample", "Protein","Expression")

to.box.plot$Condition <- NA

for (i in rownames(proteomics$abundances.corrected)) {
  to.box.plot$Condition[which(to.box.plot$Protein == i)] <- as.numeric(proteomics$annotation$BPDgrade) - 1
}

bpd.to.plot <- to.box.plot

to.box.plot <- to.box.plot[which(to.box.plot$Protein %in% c("MDC","SCGF-beta","KI3L2")),]

to.arrow <- data.frame()
for(i in c("MDC","SCGF-beta","KI3L2")){
  to.arrow <- rbind(
    to.arrow,
    data.frame(
      Protein = i,
      Values = c(mean(to.box.plot$Expression[which(to.box.plot$Protein == i & to.box.plot$Condition == 1)]) - (mean(to.box.plot$Expression[which(to.box.plot$Protein == i & to.box.plot$Condition == 0)])),
      mean(to.box.plot$Expression[which(to.box.plot$Protein == i & to.box.plot$Condition == 2)]) - (mean(to.box.plot$Expression[which(to.box.plot$Protein == i & to.box.plot$Condition == 0)]))),
      Type = c("Mild BPD","Moderate/Severe BPD")
    )
  )
}

to.arrow$Protein <- c("CCL22",
                      "CCL22",
                      "SCGF-beta",
                      "SCGF-beta",
                      "KIR3DL2",
                      "KIR3DL2")
```

```{r}
to.box.plot <- melt(t(new.soma))
colnames(to.box.plot) <- c("Sample", "Protein","Expression")

to.box.plot$Condition <- NA

for (i in rownames(new.soma)) {
  to.box.plot$Condition[which(to.box.plot$Protein == i)] <- annot.soma$Condition
}

to.box.plot <- to.box.plot[which(to.box.plot$Protein %in% c("MDC","SCGF.beta","KI3L2")),]
from.bpd <- bpd.to.plot[which(bpd.to.plot$Protein %in% c("MDC","SCGF-beta","KI3L2")),]

from.bpd$Protein <- gsub(pattern = "-",replacement = ".",x = from.bpd$Protein)

to.arrow <- data.frame()
for(i in c("MDC","SCGF.beta","KI3L2")){
  to.arrow <- rbind(
    to.arrow,
    data.frame(
      Protein = i,
      Values = c(
        
        mean(from.bpd$Expression[which(from.bpd$Protein == i & from.bpd$Condition == 1)]) - (mean(from.bpd$Expression[which(from.bpd$Protein == i & from.bpd$Condition == 0)])),
        
        mean(from.bpd$Expression[which(from.bpd$Protein == i & from.bpd$Condition == 2)]) - (mean(from.bpd$Expression[which(from.bpd$Protein == i & from.bpd$Condition == 0)])),
        
        mean(to.box.plot$Expression[which(to.box.plot$Protein == i & to.box.plot$Condition == 2)]) - (mean(to.box.plot$Expression[which(to.box.plot$Protein == i & to.box.plot$Condition == 1)])),
                 
      mean(to.box.plot$Expression[which(to.box.plot$Protein == i & to.box.plot$Condition == 3)]) - (mean(to.box.plot$Expression[which(to.box.plot$Protein == i & to.box.plot$Condition == 1)]))
      
      ),
      Type = factor(c("Mild BPD","Moderate/Severe BPD","COPD","IPF"),
                    levels = c("IPF","COPD","Moderate/Severe BPD","Mild BPD"))
    )
  )
}

to.arrow$Protein <- c("CCL22","CCL22","CCL22","CCL22",
                      "SCGF-beta","SCGF-beta","SCGF-beta","SCGF-beta",
                      "KIR3DL2","KIR3DL2","KIR3DL2","KIR3DL2")

prot.casted <- dcast(to.arrow,Type~Protein,value.var = "Values")
prot.casted[,2] <- formatC(prot.casted[,2],format = "e",digits = 2)
prot.casted[,3] <- formatC(prot.casted[,3],format = "e",digits = 2)
prot.casted[,4] <- formatC(prot.casted[,4],format = "e",digits = 2)

rmarkdown::paged_table(prot.casted)
```

# Session info

```{r}
sessionInfo()
```